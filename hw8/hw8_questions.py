from random import randint
from telebot import types
import telebot
import re
import os

CFG = {
    'API_TOKEN': "<API_TOKEN>",
    'LOG_BOT': "log_bot.txt",
    'USERS_FILE': "users.txt",
    'REPLIES_DIR': "hw8/replies",
    'ADMINS_IDS': (948908953,),
    'IS_QUESTION_MODE' : False
}

def new_inline_keyboard(btn_names: list, btn_data_list: list, row_wight=1):
    markup = types.InlineKeyboardMarkup(row_width=row_wight)
    for i in range(len(btn_names)):
        markup.add(types.InlineKeyboardButton(btn_names[i], callback_data=btn_data_list[i]))
    return markup

def read_file(filename: str):
    with open(filename, mode='r', encoding='UTF-8') as file:
        lines = file.readlines()
    for i in range(len(lines)):
        lines[i] = lines[i].replace('\n','')
    return lines

def write_file(filename: str, data):
    with open(filename, mode='a', encoding='UTF-8') as file:
        file.write(data + "\n")

def write_obj(filename: str, data):
    with open(filename, mode='a', encoding='UTF-8') as file:
        file.write(data)

def write_log(message, text=None):
    from datetime import datetime
    line = f"{datetime.now()} {message.from_user.first_name} {message.from_user.last_name} {message.from_user.username}: "
    if text == None:
        line += f"{message.text}"
    else:
        line += text
    write_file(CFG['LOG_BOT'], line)

bot = telebot.TeleBot(CFG['API_TOKEN'])

@bot.message_handler(commands=['start', 'reset'])
def send_welcome(message):
    CFG['IS_QUESTION_MODE'] = False
    if message.from_user.id in CFG['ADMINS_IDS']:
        markup = new_inline_keyboard(['üì® –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É'], ['send_all'])
        text = "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"
    else:
        markup = new_inline_keyboard(['üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å'], ['btn1', 'btn2'])
        text = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –£ –º–µ–Ω—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! –¢–∞–∫–∂–µ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –í–∞—à –≤–æ–ø—Ä–æ—Å"
    bot.send_message(message.from_user.id, text, reply_markup=markup)

@bot.message_handler(func=lambda x: CFG['IS_QUESTION_MODE'], content_types=['text'])
def text_message(message):
    write_log(message, "BOT: –ó–∞–¥–∞–Ω –≤–æ–ø—Ä–æ—Å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É")
    filename = f"{CFG['REPLIES_DIR']}/q_{message.id}_{message.from_user.id}.txt"
    data = '{' + f'"message_id": {message.id}, "user_id": {message.from_user.id}, "question": "{message.text}"' + '}'
    write_obj(filename, data)
    bot.send_message(message.from_user.id, """–í–∞—à –≤–æ–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞. \
–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –í—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –∏–ª–∏ –æ—Ç–≤–µ—Ç —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–∏–π, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "/reset" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å" """)

@bot.callback_query_handler(lambda x: x.data == 'btn1')
def register_user(message):
    if str(message.from_user.id) not in read_file(CFG['USERS_FILE']):
        write_file(CFG['USERS_FILE'], f"{message.from_user.id}")
        write_log(message, text="BOT: –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
        bot.send_message(message.from_user.id, text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        write_log(message, text="BOT: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
    else:
        write_log(message, text="BOT: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
        bot.send_message(message.from_user.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

@bot.callback_query_handler(lambda x: x.data == 'btn2')
def welcome(message):
    CFG['IS_QUESTION_MODE'] = True
    bot.send_message(message.from_user.id, "–ó–∞–¥–∞–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à –≤–æ–ø—Ä–æ—Å")

@bot.callback_query_handler(lambda x: x.data == 'send_all')
def send_all(message):
    for id in read_file(CFG['USERS_FILE']):
        bot.send_message(id, "–°–æ–≤–µ—â–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
        write_log(message, text="BOT: –ê–¥–º–∏–Ω —Å–¥–µ–ª–∞–ª —Ä–∞—Å—Å—ã–ª–∫—É")

bot.polling()