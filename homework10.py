import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
df = pd.read_csv('data2023.csv', encoding='cp1251', sep=';')

# Задача 1. Найдите, какая область центрального федерального округа 
# имела наибольшую численность студентов вечерней формы обучения в 2015 году
def task1():
    df_task1 = pd.DataFrame(df, columns=['Субъект РФ', 'Численность студентов очно-заочная (вечерняя) форма, человек, 2015'])
    df_task1 = df_task1.iloc[2:20, :]
    max_value = df_task1['Численность студентов очно-заочная (вечерняя) форма, человек, 2015'].max()
    print(df_task1[df_task1['Численность студентов очно-заочная (вечерняя) форма, человек, 2015'] == max_value])


# Задача 2. Постройте диаграмму с данными о численности студентов 
# дневной формы обучения южного федерального округа за 2017 год

def task2():
    df_task2 = pd.DataFrame(df, columns=['Субъект РФ', 'Численность студентов, очная форма, человек, 2017'])
    df_task2 = df_task2.iloc[33:41, :]
    plot = sns.barplot(df_task2, x='Субъект РФ', y='Численность студентов, очная форма, человек, 2017')
    plot.set_xticklabels(labels = df_task2['Субъект РФ'], rotation=90)
    plt.show()

# Задача 3. Постройте диаграмму количества студентов заочной формы обучения за 2019
# год по всем регионам, в которых общее количество студентов не превышает 10000 за данный год
def task3():
    df_task3 = pd.DataFrame(df, columns=['Субъект РФ', 'Численность студентов заочная форма, человек, 2019'])
    mask = df_task3['Субъект РФ'].str.contains('федеральный округ')
    df_task3 = df_task3.drop(df_task3[mask].index)
    df_task3 = df_task3.iloc[1:, :]
    df_task3 = df_task3[df_task3['Численность студентов заочная форма, человек, 2019'] <= 10000]
    plot = sns.barplot(df_task3, x='Субъект РФ', y='Численность студентов заочная форма, человек, 2019')
    plot.set_xticklabels(labels = df_task3['Субъект РФ'], rotation=90)
    plt.show()
